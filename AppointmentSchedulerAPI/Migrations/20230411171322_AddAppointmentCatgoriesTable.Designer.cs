// <auto-generated />
using System;
using AppointmentSchedulerAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppointmentSchedulerAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230411171322_AddAppointmentCatgoriesTable")]
    partial class AddAppointmentCatgoriesTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppointmentSchedulerAPI.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Reminder")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppointmentDate = new DateTime(2023, 3, 20, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Reminder = true,
                            Title = "Appointment with doctor"
                        },
                        new
                        {
                            Id = 2,
                            AppointmentDate = new DateTime(2023, 3, 25, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            Reminder = false,
                            Title = "Appointment with professor"
                        });
                });

            modelBuilder.Entity("AppointmentSchedulerAPI.Models.AppointmentCategory", b =>
                {
                    b.Property<int>("AppointmentCategoryNo")
                        .HasColumnType("int");

                    b.Property<string>("AppointmentCategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AppointmentCategoryNo");

                    b.ToTable("AppointmentCategeroies");
                });
#pragma warning restore 612, 618
        }
    }
}
