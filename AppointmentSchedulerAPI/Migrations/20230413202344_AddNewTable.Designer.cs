// <auto-generated />
using System;
using AppointmentSchedulerAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppointmentSchedulerAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230413202344_AddNewTable")]
    partial class AddNewTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppointmentSchedulerAPI.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CategoryNo")
                        .HasColumnType("int");

                    b.Property<bool>("Reminder")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryNo");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("AppointmentSchedulerAPI.Models.AppointmentCategory", b =>
                {
                    b.Property<int>("AppointmentCategoryNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentCategoryNo"));

                    b.Property<string>("AppointmentCategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AppointmentCategoryNo");

                    b.ToTable("AppointmentCategeroies");
                });

            modelBuilder.Entity("AppointmentSchedulerAPI.Models.Appointment", b =>
                {
                    b.HasOne("AppointmentSchedulerAPI.Models.AppointmentCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
